<%#= form_with model: @micropost do |f| %>
<%= form_for @micropost, url: mobile_update_micropost_path(@micropost), method: :patch, remote: true do |f| %>

<div class="form-group mt-3 ml-3 mr-3">
  <%= f.text_field :title, placeholder: "無題のノート", class: "w-100 form-title" %>
</div>

<div class="border-bottom border-muted ml-3 mr-3" id="border-title"></div>

<div class="d-flex flex-row-reverse">
  <div>
    <small class="text-muted float-right mt-2 mr-3 mb-4"><%= @micropost.updated_at.strftime('%Y/%m/%d') %></small>
  </div>
  <div>
    <span class="float-right mr-2 mt-1" data-toggle="modal" data-target="#mobile-form-modal-<%= @micropost.id %>" style="cursor: pointer; cursor: hand;">
      <img src="/app/assets/images/garbage-mono.svg" alt="garbage" style="width: 20px;" onmouseover="this.src='/app/assets/images/garbage.svg'" onmouseout="this.src='/app/assets/images/garbage-mono.svg'" data-toggle="tooltip" data-placement="bottom" title="ゴミ箱に移動する">
    </span>
  </div>
</div>

<div class="form-group ml-3 mr-3 mt-2">
  <%= f.text_area :body, placeholder: "本文", id: "form-body", class: "w-100 scroll-bar" %>
</div>

<% end %>


<!-- Modal -->
<div class="modal fade" id="mobile-form-modal-<%= @micropost.id %>" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered" role="document">
    <div class="modal-content">
      <div class="modal-body">
        メモ「<%= @micropost.title %>」をゴミ箱に移動しますか？
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">キャンセル</button>
        <%= link_to "ゴミ箱に移動する", mobile_trash_path(@micropost), class: "btn btn-primary trash_button", method: "get", remote: true, "data-dismiss": "modal" %>
      </div>
    </div>
  </div>
</div>


<script>
  $('form').change(function(){
    Rails.fire($('form')[0], 'submit');
  });
  $('form').keypress(function(e){
    if(e.which==13){
      Rails.fire($('form')[0], 'submit');
    }
  });
//  window.addEventListener("popstate", function(event){
//    if(event.state != null) {
//      //バックボタンた押されるたびに、pushしたpageオブジェクトのデータがまるごとpopされます。
//      $(".ajax-index").html(event.state.page); 
//    }
//  }
//  $(window).on('popstate', function(e){
//    $('.back').trigger('click');
//    console.log('mobile_ajax'); console.log(e.originalEvent.state);
//    $(".mobile-history").html(e.originalEvent.state.page);
//    history.pushState(null, null, null);
//    $.ajax({
//      url: "microposts/back_to_index/mobile",
//      type: "GET"
//    });
//  });
    
//    if (!e.originalEvent.state) return; // 初回アクセス時に再読み込みしてしまう対策
//    loadContents(location.pathname);
    
//    history.pushState("hoge", null, '');
    
//    if(e.originalEvent.state!=null){
//      console.log('mobile_ajax'); console.log(e.originalEvent.state);
//      $(".mobile-history").html(e.originalEvent.state.page);
//    }else{
//      console.log('null');
//    }
    
    
    
//    history.pushState("hoge", null, '');
//    return;

//  });
//  window.onpopstate = function(event) {
//    console.log(event.state);
//    
//  };
  // History API が使えるブラウザかどうかをチェック
//  if( window.history && window.history.pushState ){
//    //. ブラウザ履歴に１つ追加
//    history.pushState( "nohb", null, "" );
//    $(window).on( "popstate", function(event){
//      //. このページで「戻る」を実行
//      if( !event.originalEvent.state ){
//        //. もう一度履歴を操作して終了
//        history.pushState( "nohb", null, "" );
//        console.log(event.state);
//        return;
//      }
//    });
//  }
</script>